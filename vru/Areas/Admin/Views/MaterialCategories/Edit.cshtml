@model SxVMEditMaterialCategory
@{
    var isNew = string.IsNullOrEmpty(Model.Id);
    ViewBag.Title = isNew ? "Добавить категорию" : "Редактировать категорию \"" + Model.Title + "\"";
    Enums.ModelCoreType mct = ViewBag.ModelCoreType;
}

<h1>@ViewBag.Title</h1>

@if (!isNew)
{
    <div class="text-right">
        <div class="form-group">
            <form method="post" action="@Url.Action("Delete","MaterialCategories")">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x=>x.ModelCoreType)
                <button class="btn btn-danger" type="submit" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить</button>
            </form>
        </div>
    </div>
}

<form method="post" action="@Url.Action("Edit","MaterialCategories")">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.ModelCoreType)
    <input type="hidden" name="OldId" value="@Model.Id" />

    <div class="form-group">
        @Html.LabelFor(x => x.Title, new { @class = "control-label" })
        @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название категории" } })
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    @if (isNew)
    {
        @Html.HiddenFor(x => x.Id)
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(x => x.Id, new { @class = "control-label" })
            @Html.EditorFor(x => x.Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите строковый ключ" } })
            @Html.ValidationMessageFor(x => x.Id)
        </div>

        <div class="alert alert-warning">
            <strong>Внимание!</strong> Идентификатор задается автоматически на основе заголовка категории. При изменению ключа изменяется канонический адрес страницы. Поэтому если страница является важной, то после изменения ключа необходимо добавить 301 редирект со старого адреса на новый, на который будет указывать измененный ключ.
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(x => x.FrontPictureId, new { @class = "control-label" })
        @Html.EditorFor(x => x.FrontPictureId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.FrontPictureId)
    </div>

    <div class="form-group">
        <button class="btn btn-primary" type="submit">@(isNew ? "Добавить" : "Сохранить")</button>
        <a href="@Url.Action("Index", new { mct=mct})" class="btn btn-default">Назад</a>
    </div>

</form>

@section scripts{
    <script src="~/Areas/Admin/content/dist/js/jquery.validate.min.js"></script>
    <script src="~/Areas/Admin/content/dist/js/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(function () {
            $('#FrontPictureId').sx_gvl();
        });
    </script>
}

