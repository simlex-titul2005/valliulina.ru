@model SxVMMaterialCategory
@{
    var isNew = Model.Id == null;
    ViewBag.Title = isNew ? "Добавить категорию" : "Редактировать категорию \"" + Model.Title + "\"";
    var forAphorism = Model.ModelCoreType == Enums.ModelCoreType.Aphorism;
}

@section styles{
    <link href="~/Areas/Admin/content/dist/css/lightbox.min.css" rel="stylesheet" />
}

<h2>@ViewBag.Title</h2>

@if (!isNew)
{
    <div class="form-group">
        <div class="text-right">
            <form method="post" action="@Url.Action("Delete", "MaterialCategories")">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.ModelCoreType)
                <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись?')) return false;">Удалить</button>
            </form>
        </div>
    </div>
}

<form method="post" action="@Url.Action("Edit", "MaterialCategories")" autocomplete="off">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.ParentCategoryId)
    @Html.HiddenFor(x => x.ModelCoreType)
    @if (!isNew && !User.IsInRole("architect"))
    {
        @Html.HiddenFor(x => x.Id)
    }

    @if (!isNew && User.IsInRole("architect"))
    {
        <input type="hidden" name="OldId" value="@Model.Id" />

        <div class="form-group">
            @Html.LabelFor(x => x.Id, new { @class = "control-label" })
            <span class="text-info"> (не должен содержать кириллицы и любых знаков, кроме тире)</span>
            @Html.EditorFor(x => x.Id, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите идентификатор категории" } })
            @Html.ValidationMessageFor(x => x.Id)
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(x => x.Title, new { @class = "control-label" })
        @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название категории" } })
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    <div class="row">
        <div class="col-md-@(forAphorism?6:12)">
            <div class="form-group">
                @Html.LabelFor(x => x.FrontPictureId, new { @class = "control-label" })
                @if (Model.FrontPictureId.HasValue)
                {
                    <a data-original-title="Помотреть картинку" onclick="x()" data-lightbox="roadtrip" data-title="Иконка @Model.Title" data-toggle="tooltip" title="" href="/pictures/picture/@Model.FrontPictureId"><i class="fa fa-picture-o"></i></a>
                }
                @Html.EditorFor(x => x.FrontPictureId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Выберите изображение" } })
                @Html.ValidationMessageFor(x => x.FrontPictureId)
            </div>
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        @Html.ActionLink("Назад", "Index", "MaterialCategories", new { mct = Model.ModelCoreType }, new { @class = "btn btn-default" })
    </div>
</form>

@section scripts{
    <script src="~/Areas/Admin/content/dist/js/lightbox.min.js"></script>
    <script src="~/Areas/Admin/content/dist/js/jquery.validate.min.js"></script>
    <script src="~/Areas/Admin/content/dist/js/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(function () {
            $('#FrontPictureId, #GameId').sx_gvl();
        });
    </script>
}