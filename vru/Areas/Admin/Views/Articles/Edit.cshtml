@model VMArticle
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить статью" : "Редактировать статью \"" + Model.Title + "\"";
}

@section styles{
    <link href="~/Areas/Admin/content/dist/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <link href="~/Areas/Admin/content/dist/css/lightbox.min.css" rel="stylesheet" />
}

<h1>@ViewBag.Title</h1>
@if (Model.Id != 0 && User.IsInRole("admin"))
{
    <div class="text-right">
        <form method="post" action="@Url.Action("Delete", "Articles")">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ModelCoreType)
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить статью</button>
        </form>
    </div>
}
<br />

<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#params" aria-controls="params" role="tab" data-toggle="tab">Параметры</a></li>
    <li role="presentation"><a href="#tags-cloud" aria-controls="tags-cloud" role="tab" data-toggle="tab">Облако тегов</a></li>
    <li role="presentation"><a href="#seo" aria-controls="seo" role="tab" data-toggle="tab">Seo</a></li>
</ul>
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="params">
        <h2>Основные параметры материала</h2>
        <form method="post" action="@Url.Action("Edit", "Articles")" autocomplete="off">
            @Html.AntiForgeryToken()

            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ModelCoreType)
            @*@Html.HiddenFor(x => x.OldTitleUrl)*@
            @if (!isNew)
            {
            @Html.HiddenFor(x => x.UserId)
            }

            <div class="row">
                <div class="col-md-@(isNew?8:6)">
                    @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название статьи" } })
                    @Html.ValidationMessageFor(x => x.Title)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Show)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(x => x.IsTop, new { @class = "control-label" })
                    @Html.EditorFor(x => x.IsTop, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.IsTop)
                </div>

                @if (!isNew)
                {
                <div class="col-md-2">
                    @Html.LabelFor(x => x.DateOfPublication, new { @class = "control-label" })
                    @Html.EditorFor(x => x.DateOfPublication, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите дату публикации" } })
                    @Html.ValidationMessageFor(x => x.DateOfPublication)
                </div>
                }
            </div>
            <br />
            @if (!isNew && !string.IsNullOrEmpty(Model.TitleUrl) && User.IsInRole("architect"))
            {
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(x => x.TitleUrl, new { @class = "control-label" })
                    <span class="text-info"> (применяется для уникальной идентификации материала)</span>
                    @Html.EditorFor(x => x.TitleUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.TitleUrl)
                </div>
            </div>
            <br />
            }
            else
            {
            @Html.HiddenFor(x => x.TitleUrl)
            }
            <div class="row">
                <div class="col-md-3">
                    @*@Html.LabelFor(x => x.GameId, new { @class = "control-label" })
                    @Html.EditorFor(x => x.GameId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.GameId)*@
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(x => x.CategoryId, new { @class = "control-label" })
                    @Html.EditorFor(x => x.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.CategoryId)
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(x => x.FrontPictureId, new { @class = "control-label" })
                    @if (Model.FrontPictureId.HasValue)
                    {
                    <a data-original-title="Помотреть картинку" onclick="x()" data-lightbox="roadtrip" data-title="@Model.Title" data-toggle="tooltip" title="" href="/pictures/picture/@Model.FrontPictureId"><i class="fa fa-picture-o"></i></a>
                    }
                    @Html.EditorFor(x => x.FrontPictureId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.FrontPictureId)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(x => x.ShowFrontPictureOnDetailPage, new { @class = "control-label" })
                    @Html.EditorFor(x => x.ShowFrontPictureOnDetailPage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.ShowFrontPictureOnDetailPage)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(x => x.Foreword, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Foreword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите начальное описание материала" } })
                    @Html.ValidationMessageFor(x => x.Foreword)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <button data-toggle="modal" title="Посмотреть результат" data-target="#matModal" type="button" class="btn btn-default"><i class="fa fa-eye"></i></button>&nbsp;
                    @Html.LabelFor(x => x.Html, new { @class = "control-label" }) <br /><br />
                    @Html.EditorFor(x => x.Html, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Html)
                    @Html.Partial("_MaterialModal", Model)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
                        @Html.RouteLink("Назад", new { action = "Index" }, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div role="tabpanel" class="tab-pane" id="tags-cloud">
        @*<div class="row">
            <div class="col-md-12">
                <div id="grid-mat-tags">
                    @Html.Action("index", new { controller = "MaterialTags", mid = Model.Id, mct = Model.ModelCoreType })
                </div>
            </div>
        </div>*@
    </div>

    <div role="tabpanel" class="tab-pane" id="seo">
        @*<div class="row">
            <div class="col-md-12">
                <div id="grid-mat-tags">
                    @Html.Action("EditForMaterial", new { controller = "SeoTags", mid = Model.Id, mct = Model.ModelCoreType, id = Model.SeoTagsId })
                </div>
            </div>
        </div>*@
    </div>

</div>

@section scripts{
    <script type="text/javascript" src="~/bower_components/ckeditor/ckeditor.js"></script>
    <script src="~/content/dist/js/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/moment-with-locales.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/lightbox.min.js"></script>
    <script type="text/javascript">
        if (CKEDITOR.instances['Html']) {
            CKEDITOR.remove(CKEDITOR.instances['Html']);
        }
        CKEDITOR.replace('Html', { height: 400 });

        $(function () {
            $('#FrontPictureId, #CategoryId').sx_gvl();

             @*$('#FrontPictureId, #GameId, #CategoryId').sx_gvl();
            $('#grid-mat-tags, #seo-kw, #grid-videos, #grid-not-mat-videos').sx_gv();

            $('#DateOfPublication').closest('.date').datetimepicker({
                locale: 'ru',
                format: 'DD.MM.YYYY HH:mm',
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down',
                    previous: 'fa fa-arrow-left',
                    next: 'fa fa-arrow-right',
                    today: '',
                    clear: '',
                    close: ''
                }
            });

            $('#not-mat-videos-form').submit(function (e) {
                $form = $(this);
                $target = $('#not-mat-videos');
                $target.find('input[type="checkbox"]:checked').each(function () {
                    $input = $(this);
                    var id = $input.closest('.sx-gv__row').attr('data-row-id');
                    $('<input type="hidden" name="video" value="' + id + '" />').appendTo($form);
                });

                $.ajax({
                    url: '@Url.Action("AddMaterialVideo", "VideoLinks")',
                    data: $form.serialize(),
                    type: 'post',
                    success: function (data) {
                        $('#grid-videos').html(data);
                        $('#not-mat-videos').modal('hide');
                    },
                    complete: function () {
                        $form.find('input[name="video"]').remove();
                    }
                });
                e.preventDefault();
            });

            $('#grid-videos').on('click', '.sx-gv__create-btn', function (event) {
                $('#not-mat-videos').modal('show');
                return false;
            });

            $('#matModal').on('show.bs.modal', function (e) {
                $(this).find('.modal-title').html($('#Title').val());
                $(this).find('.modal-body > .container-fluid').html($('#Html').val());
            })

            $('#not-mat-videos').on('show.bs.modal', function (event) {
                var modal = $(this);
                $.ajax({
                    method: 'get',
                    url: '/videolinks/indexnotlinked?mid=' + @Model.Id + '&mct=' + '@Model.ModelCoreType' + '&fm=false',
                    success: function (data) {
                        modal.find('.modal-body').html(data);
                    }
                });
            })*@
        });

    </script>
}
