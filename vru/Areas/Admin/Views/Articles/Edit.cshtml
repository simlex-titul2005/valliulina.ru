@model VMArticle
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить статью" : "Редактировать статью \"" + Model.Title + "\"";
}

@section styles{
    <link href="~/Areas/Admin/content/dist/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <link href="~/Areas/Admin/content/dist/css/lightbox.min.css" rel="stylesheet" />
}

<h1>@ViewBag.Title</h1>
<div class="alert alert-warning">
    <strong>Внимание!</strong> Материалы на сайт выводятся по дате публикации. По-умолчанию дата публикации ставиться на час позже, чем дата создания материала.
</div>
@if (Model.Id != 0 && User.IsInRole("admin"))
{
    <div class="text-right">
        <form method="post" action="@Url.Action("Delete", "Articles")">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ModelCoreType)
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить статью</button>
        </form>
    </div>
}

<form method="post" action="@Url.Action("Edit", "Articles")" autocomplete="off">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.ModelCoreType)
    @Html.HiddenFor(x => x.UserId)
    @Html.HiddenFor(x => x.DateCreate)
    @Html.HiddenFor(x=>x.DateUpdate)

    <div class="row">
        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название статьи" } })
                @Html.ValidationMessageFor(x => x.Title)
            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Show)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(x => x.DateOfPublication, new { @class = "control-label" })
                @Html.EditorFor(x => x.DateOfPublication, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите дату публикации" } })
                @Html.ValidationMessageFor(x => x.DateOfPublication)
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(x => x.CategoryId, new { @class = "control-label" })
                @Html.EditorFor(x => x.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.CategoryId)
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(x => x.FrontPictureId, new { @class = "control-label" })
            @if (Model.FrontPictureId.HasValue)
                    {
                    <a data-original-title="Помотреть картинку" onclick="x()" data-lightbox="roadtrip" data-title="@Model.Title" data-toggle="tooltip" title="" href="/pictures/picture/@Model.FrontPictureId"><i class="fa fa-picture-o"></i></a>
                    }
            @Html.EditorFor(x => x.FrontPictureId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.FrontPictureId)
        </div>
        <div class="col-md-2">
            @Html.LabelFor(x => x.ShowFrontPictureOnDetailPage, new { @class = "control-label" })
            @Html.EditorFor(x => x.ShowFrontPictureOnDetailPage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.ShowFrontPictureOnDetailPage)
        </div>
    </div>

    @if (!isNew)
    {
        <div class="form-group">
            @Html.LabelFor(x => x.TitleUrl, new { @class = "control-label" })
            @Html.EditorFor(x => x.TitleUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.TitleUrl)
        </div>

        <div class="alert alert-warning">
            <strong>Внимание!</strong> Строковый ключ задается автоматически на основе заголовка статьи. При изменению ключа изменяется канонический адрес страницы. Поэтому если страница является важной, то после изменения ключа необходимо добавить 301 редирект со старого адреса на новый, на который будет указывать измененный ключ.
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(x => x.Html, new { @class = "control-label" }) <br /><br />
        @Html.EditorFor(x => x.Html, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Html)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
        @Html.RouteLink("Назад", new { action = "Index" }, new { @class = "btn btn-default" })
    </div>
</form>

@section scripts{
    <script src="~/bower_components/ckeditor/ckeditor.js"></script>
    <script src="~/Areas/Admin/content/dist/js/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Areas/Admin/content/dist/js/moment-with-locales.min.js"></script>
    <script src="~/Areas/Admin/content/dist/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Areas/Admin/content/dist/js/lightbox.min.js"></script>

    <script>
        if (CKEDITOR.instances['Html']) {
            CKEDITOR.remove(CKEDITOR.instances['Html']);
        }
        CKEDITOR.replace('Html', { height: 400 });

        $(function () {
            $('#FrontPictureId, #CategoryId').sx_gvl();

            $('input[type="checkbox"][data-toggle="toggle"]').change(function () {
                var checked = $(this).prop('checked');
                $(this).parent().prev('input[type="hidden"]').val(checked);
            })

            $('#DateOfPublication').closest('.date').datetimepicker({
                locale: 'ru',
                format: 'DD.MM.YYYY HH:mm',
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down',
                    previous: 'fa fa-arrow-left',
                    next: 'fa fa-arrow-right',
                    today: '',
                    clear: '',
                    close: ''
                }
            });
        });

    </script>
}
